// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario{
  id String @id @default(uuid())
  usuario String
  senha String

  polo Polo?
  participante Participante?

  @@map("usuarios")
}

// Usuário comum
model Participante{
  id String @id @default(uuid())
  nome String
  comissao Boolean @default(false)
  perfilImagem Imagem? 
  publicacoes Publicacao[]
  cometarios Comentario[]
  reacao Reacao[]

  poloId String?
  polo Polo? @relation(fields: [poloId], references: [id])

  usuarioId String @unique
  usuario Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  @@map("participantes")
}

// Usuário administrador
model Polo{
  id String @id @default(uuid())
  nome String @unique
  numero String
  participante Participante[]

  perfilImagem Imagem? 
  usuarioId String @unique
  usuario Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  @@map("polos")
}

model Imagem{
  url String @id
  hash String
  proporcao String @default("1:1")

  poloId String? @unique
  polo Polo? @relation(fields: [poloId], references: [id], onDelete: Cascade)
  participanteId String? @unique
  participante Participante? @relation(fields: [participanteId], references: [id], onDelete: Cascade)
  publicacaoId String? @unique
  publicacao Publicacao? @relation(fields: [publicacaoId], references: [id], onDelete: Cascade)
}

model Publicacao{
  id String @id @default(uuid())
  perfilImagem Imagem? 
  descricao String
  aceito Boolean @default(false)

  cometarios Comentario[]
  reacao Reacao[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  acceptedAt DateTime?

  participanteId String
  participante Participante @relation(fields: [participanteId], references: [id], onDelete: Cascade)

  @@map("publicacoes")
}

model Comentario{
  id String @id @default(uuid())
  message String
  accepted Boolean @default(false)
  reacao Reacao[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  acceptedAt DateTime?

  participanteId String
  participante Participante @relation(fields: [participanteId], references: [id], onDelete: Cascade)
  publicacaoId String
  publicacao Publicacao @relation(fields: [publicacaoId], references: [id], onDelete: Cascade)

  @@map("comentarios")
}

enum ReationENUM {
  LOVE
}

model Reacao{
  id String @id @default(uuid())
  tipo ReationENUM @default(LOVE)

  publicacaoId String?
  publicacao Publicacao? @relation(fields: [publicacaoId], references: [id], onDelete: Cascade)
  comentarioId String?
  comentario Comentario? @relation(fields: [comentarioId], references: [id], onDelete: Cascade)

  participanteId String
  participante Participante @relation(fields: [participanteId], references: [id], onDelete: Cascade)

  @@map("reacoes")
}
